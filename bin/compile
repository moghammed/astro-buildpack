#!/usr/bin/env bash

set -e

echo "Starting Astro build process"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Create .node-version file if it doesn't exist
echo "18.17.1" > $BUILD_DIR/.node-version

# Load environment variables
for env_file in $ENV_DIR/*; do
  if [ -f "$env_file" ]; then
    export "$(basename "$env_file")=$(cat "$env_file")"
  fi
done

# Install nvm
export NVM_DIR="$BUILD_DIR/.nvm"
mkdir -p $NVM_DIR
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

# Load nvm
export NVM_DIR="$BUILD_DIR/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Install Node.js using nvm
NODE_VERSION=$(cat $BUILD_DIR/.node-version)
echo "Installing Node.js version $NODE_VERSION"
nvm install $NODE_VERSION
nvm use $NODE_VERSION

# Verify Node.js installation
node --version
npm --version

# Install dependencies and build the Astro project
cd $BUILD_DIR
echo "Installing dependencies"
npm ci || (echo "Failed to install dependencies" && exit 1)
echo "Building Astro project"
npm run build || (echo "Failed to build Astro project" && exit 1)

# Create start script
cat > $BUILD_DIR/start.sh <<EOF
#!/bin/bash
export PATH="$BUILD_DIR/.nvm/versions/node/v$NODE_VERSION/bin:$PATH"
npm start
EOF
chmod +x $BUILD_DIR/start.sh

# Ensure all necessary files are in the correct location
mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"$BUILD_DIR/.nvm/versions/node/v$NODE_VERSION/bin:\$PATH\"" > $BUILD_DIR/.profile.d/nodejs.sh

echo "Build completed successfully"