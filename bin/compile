#!/usr/bin/env bash

set -e

echo "Starting Astro build process"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Create .node-version file if it doesn't exist
if [ ! -f "$BUILD_DIR/.node-version" ]; then
  echo "18.x" > "$BUILD_DIR/.node-version"
fi

# Load environment variables
for env_file in $ENV_DIR/*; do
  if [ -f "$env_file" ]; then
    export "$(basename "$env_file")=$(cat "$env_file")"
  fi
done

# Install Node.js
NODE_VERSION=$(cat $BUILD_DIR/.node-version || echo "18.x")
echo "Installing Node.js version $NODE_VERSION"

# Use nodeenv to install Node.js instead of nvm
pip install nodeenv
nodeenv -n $NODE_VERSION $BUILD_DIR/.nodeenv
source $BUILD_DIR/.nodeenv/bin/activate

# Install dependencies and build the Astro project
cd $BUILD_DIR
echo "Installing dependencies"
npm ci || (echo "Failed to install dependencies" && exit 1)
echo "Building Astro project"
npm run build || (echo "Failed to build Astro project" && exit 1)

# Create start script
cat > $BUILD_DIR/start.sh <<EOF
#!/bin/bash
npx serve dist
EOF
chmod +x $BUILD_DIR/start.sh

echo "Build completed successfully"